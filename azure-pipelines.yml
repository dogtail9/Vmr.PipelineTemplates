# mm HH DD MM DW
#  \  \  \  \  \__ Days of week
#   \  \  \  \____ Months
#    \  \  \______ Days
#     \  \________ Hours
#      \__________ Minutes
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    always: "true"
    branches:
      include:
        - main
        - feature/*

trigger:
  branches:
    include:
      - user/*
      - feature/*
      - epic/*
      - main
  paths:
    exclude:
      - Samples

variables:
  - template: PipelineTemplates/Variables.yml
    parameters:
      Major: 1
      Minor: 2
      Patch: 3
      PreRelease: "Preview.4"
      IsRelease: 'false'

parameters:
  - name: poolImage
    displayName: Pool Image
    type: string
    default: ubuntu-latest
    values:
      - ubuntu-latest
      - ubuntu-22.04
      - ubuntu-20.04
      - windows-latest
      - windows-2022
      - windows-2019
      - macOS-latest
      - macOS-12
      - macOS-11

  - name: TestPipelines
    displayName: Run Test Pipelines
    type: string
    default: Build-Dotnet-WebApi
    values:
      - All
      - Variables
      - Update-BuildNumber
      - Create-Debug-Artifact
      - Build-Dotnet-Library
      - Build-Dotnet-WebApi

stages:
  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Variables')) }}:
    - template: TestPipelines/TestVariables.yml
      parameters:
        Major: 1
        Minor: 2
        Patch: 3
        PreRelease: "Preview.4"
        poolImage: ${{ parameters.poolImage }}

  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Update-BuildNumber')) }}:
    - template: TestPipelines/TestUpdateBuildNumber.yml
      parameters:
        poolImage: ${{ parameters.poolImage }}

  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Create-Debug-Artifact')) }}:
    - template: TestPipelines/TestCreateDebugArtifact.yml
      parameters:
        poolImage: ${{ parameters.poolImage }}

  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Build-Dotnet-Library')) }}:    
    - template: PipelineTemplates/Build/Stages/DotnetLibrary.yml
      parameters:
        PoolImage: ${{ parameters.poolImage }}
        SolutionToBuild: '**/*.sln'
        DotnetSdkVersions:
          - '6.x'
          - '7.x'
        PackageFeed: 'VirtualMonoRepo/VirtualMonoRepo_CI2'
        CreateDebugArtifact: 'true'

  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Build-Dotnet-Library')) }}:    
    - template: PipelineTemplates/Deploy/Stages/DotnetLibrary.yml
      parameters:
        PoolImage: ${{ parameters.poolImage }}
        PackageFeed: 'VirtualMonoRepo/VirtualMonoRepo_CI2'
        Environment: 'Test'
        CreateDebugArtifact: 'true'
  
  - ${{ if or(eq(parameters.TestPipelines, 'All'), eq(parameters.TestPipelines, 'Build-Dotnet-WebApi')) }}:    
    - template: PipelineTemplates/Build/Stages/DotnetWebApi.yml
      parameters:
        PoolImage: ${{ parameters.poolImage }} 
        SolutionToBuild: '**/*.sln'
        ProjectToPublish: '**/TestDotnetWebApi.csproj'
        DotnetSdkVersions:
          - '6.x'
          - '7.x'
        PackageFeed: 'VirtualMonoRepo/VirtualMonoRepo_CI2'
        CreateDebugArtifact: 'true'
    